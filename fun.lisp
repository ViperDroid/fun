(defun calculator ()
  (princ "Enter the first number: ")
  (finish-output)
  (let ((num1 (read)))
    (princ "Enter an operator (+, -, *, /): ")
    (finish-output)
    (let ((op (read-char)))
      (read-line) 
      (princ "Enter the second number: ")
      (finish-output)
      (let ((num2 (read)))
        (cond
          ((not (and (numberp num1) (numberp num2)))
           (format t "Error: Invalid number input.~%"))
          ((char= op #\+) (format t "Result: ~a~%" (+ num1 num2)))
          ((char= op #\-) (format t "Result: ~a~%" (- num1 num2)))
          ((char= op #\*) (format t "Result: ~a~%" (* num1 num2)))
          ((char= op #\/)
           (if (= num2 0)
               (format t "Error: Cannot divide by zero.~%")
               (format t "Result: ~a~%" (/ num1 num2))))
          (t (format t "Error: Invalid operator.~%")))))))

(calculator)
